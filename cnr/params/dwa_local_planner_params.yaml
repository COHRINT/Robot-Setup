DWAPlannerROS:

# Robot Configuration Parameters - Kobuki
  max_vel_x: 0.35  # (0.39 but we'll choose less)
  min_vel_x: 0.0 # This way we can move backwards 

  max_vel_y: 0.0  # diff drive robot
  min_vel_y: 0.0  # diff drive robot

  max_trans_vel: 0.35 # choose slightly less than the base's capability
  min_trans_vel: -0.34  # this is the min trans velocity when there is negligible rotational velocity
  trans_stopped_vel: 0.1

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_rot_vel: 3.0  # (3.14 about) choose slightly less than the base's capability
  min_rot_vel: 0.4  # this is the min angular velocity when there is negligible translational velocity
  rot_stopped_vel: 0.4
  
  acc_lim_x: .31 # (0.317 actually) maximum is theoretically 2.0, but we 
  acc_lim_theta: 0.1 (haven't determined this yet)
  acc_lim_y: 0.0      # diff drive robot

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1  # 0.05
  xy_goal_tolerance: 0.2  # 0.10
  latch_xy_goal_tolerance: false

# Forward Simulation Parameters
  sim_time: 4.0       # Somewhere between 2.0 and 5.0 is where the optimal is located
  vx_samples: 10       # 20 is what he uses, check if computation allows for that
  vy_samples: 0       # diff drive robot, there is only one sample
  vtheta_samples: 20  # 40 is what he uses, check if computation allows
  sim_granularity: 0.025

# Trajectory Scoring Parameters
  path_distance_bias: 32.0      # 32.0   - weighting for how much it should stick to the global path plan
  goal_distance_bias: 20.0      # 24.0   - wighting for how much it should attempt to reach its goal
  occdist_scale: 0.02            # 0.01   - weighting for how much the controller should avoid obstacles (too high and it's indecisive)
  forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
  stop_time_buffer: 0.2         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
  scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags

# Debugging
  publish_traj_pc : true
  publish_cost_grid_pc: true
  global_frame_id: odom


# Differential-drive robot configuration - necessary?
  holonomic_robot: true
